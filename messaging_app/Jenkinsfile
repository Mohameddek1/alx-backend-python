pipeline {
    agent any
    environment {
        PYTHON_VERSION = '3.9' // Adjust to your Python version
    }
    stages {
        stage('Checkout') {
            steps {
                // Pull code from GitHub using the credentials
                git branch: 'main', credentialsId: 'dcfbfbd4-9f79-4645-aeff-4295d081b4f6', url: 'https://github.com/Mohameddek1/alx-backend-python.git'
            }
        }
        stage('Set Up Python Environment') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip3 install --upgrade pip
                    pip3 install -r messaging_app/requirements.txt
                '''
            }
        }
        stage('Run Tests') {
            steps {
                sh '''
                    . venv/bin/activate
                    cd messaging_app
                    pytest --junitxml=test-results.xml
                '''
            }
        }
        stage('Archive Test Results') {
            steps {
                junit 'messaging_app/test-results.xml'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("$DOCKERHUB_USERNAME/messaging_app:${env.BUILD_NUMBER}")
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-credentials-id') {
                        dockerImage.push()
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for details.'
        }
    }
}